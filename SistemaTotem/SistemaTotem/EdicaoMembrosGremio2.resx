<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="FotoPerfil.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>